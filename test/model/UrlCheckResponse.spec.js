/**
 * /data.mill for applications
 * **&#47;data.mill for applications** is the most versatile and powerful API for all aspects of data quality in your business application.  Use **&#47;data.mill** to check, correct and enrich personal data and business information. The internationally applicable functions can be integrated easily into existing applications, whether desktop, online or mobile and thus enable you to professionally improve your customer or supplier database, directly in your system. Due to **&#47;data.mill**'s pay-per-use credit model there are no setup fees or fixed monthly subscription fees.  **&#47;data.mill** is constantly evolving and upgraded with the latest technology and data services available on the market.  GitHub for SDKs: https://github.com/datamill-solutions 
 *
 * OpenAPI spec version: 1.6.5
 * Contact: info@datamill.solutions
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.datamill-js-client);
  }
}(this, function(expect, datamill-js-client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new datamill-js-client.UrlCheckResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UrlCheckResponse', function() {
    it('should create an instance of UrlCheckResponse', function() {
      // uncomment below and update the code to test UrlCheckResponse
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be.a(datamill-js-client.UrlCheckResponse);
    });

    it('should have the property valid (base name: "valid")', function() {
      // uncomment below and update the code to test the property valid
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be();
    });

    it('should have the property httpCode (base name: "http_code")', function() {
      // uncomment below and update the code to test the property httpCode
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be();
    });

    it('should have the property totalTime (base name: "total_time")', function() {
      // uncomment below and update the code to test the property totalTime
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be();
    });

    it('should have the property namelookupTime (base name: "namelookup_time")', function() {
      // uncomment below and update the code to test the property namelookupTime
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be();
    });

    it('should have the property connectTime (base name: "connect_time")', function() {
      // uncomment below and update the code to test the property connectTime
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be();
    });

    it('should have the property pretransferTime (base name: "pretransfer_time")', function() {
      // uncomment below and update the code to test the property pretransferTime
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be();
    });

    it('should have the property starttransferTime (base name: "starttransfer_time")', function() {
      // uncomment below and update the code to test the property starttransferTime
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be();
    });

    it('should have the property primaryIp (base name: "primary_ip")', function() {
      // uncomment below and update the code to test the property primaryIp
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be();
    });

    it('should have the property primaryPort (base name: "primary_port")', function() {
      // uncomment below and update the code to test the property primaryPort
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be();
    });

    it('should have the property downloadContentLength (base name: "download_content_length")', function() {
      // uncomment below and update the code to test the property downloadContentLength
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be();
    });

    it('should have the property contentType (base name: "content_type")', function() {
      // uncomment below and update the code to test the property contentType
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be();
    });

    it('should have the property redirects (base name: "redirects")', function() {
      // uncomment below and update the code to test the property redirects
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be();
    });

    it('should have the property parameters (base name: "parameters")', function() {
      // uncomment below and update the code to test the property parameters
      //var instane = new datamill-js-client.UrlCheckResponse();
      //expect(instance).to.be();
    });

  });

}));
