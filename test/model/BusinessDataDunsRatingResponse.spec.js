/**
 * /data.mill for applications
 * **&#47;data.mill for applications** is the most versatile and powerful API for all aspects of data quality in your business application.  Use **&#47;data.mill** to check, correct and enrich personal data and business information. The internationally applicable functions can be integrated easily into existing applications, whether desktop, online or mobile and thus enable you to professionally improve your customer or supplier database, directly in your system. Due to **&#47;data.mill**'s pay-per-use credit model there are no setup fees or fixed monthly subscription fees.  **&#47;data.mill** is constantly evolving and upgraded with the latest technology and data services available on the market. 
 *
 * OpenAPI spec version: 1.6.4
 * Contact: info@datamill.solutions
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DatamillForApplications);
  }
}(this, function(expect, DatamillForApplications) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DatamillForApplications.BusinessDataDunsRatingResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BusinessDataDunsRatingResponse', function() {
    it('should create an instance of BusinessDataDunsRatingResponse', function() {
      // uncomment below and update the code to test BusinessDataDunsRatingResponse
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be.a(DatamillForApplications.BusinessDataDunsRatingResponse);
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property statusDescription (base name: "status_description")', function() {
      // uncomment below and update the code to test the property statusDescription
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property dunsNumber (base name: "duns_number")', function() {
      // uncomment below and update the code to test the property dunsNumber
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property companyName (base name: "company_name")', function() {
      // uncomment below and update the code to test the property companyName
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property continentName (base name: "continent_name")', function() {
      // uncomment below and update the code to test the property continentName
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "country_code")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property countryCode3 (base name: "country_code_3")', function() {
      // uncomment below and update the code to test the property countryCode3
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property countryName (base name: "country_name")', function() {
      // uncomment below and update the code to test the property countryName
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property zip (base name: "zip")', function() {
      // uncomment below and update the code to test the property zip
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property street (base name: "street")', function() {
      // uncomment below and update the code to test the property street
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property houseNumber (base name: "house_number")', function() {
      // uncomment below and update the code to test the property houseNumber
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phone_number")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property faxNumber (base name: "fax_number")', function() {
      // uncomment below and update the code to test the property faxNumber
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property stateName (base name: "state_name")', function() {
      // uncomment below and update the code to test the property stateName
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property ceoName (base name: "ceo_name")', function() {
      // uncomment below and update the code to test the property ceoName
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property ceoTitle (base name: "ceo_title")', function() {
      // uncomment below and update the code to test the property ceoTitle
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property sicCode (base name: "sic_code")', function() {
      // uncomment below and update the code to test the property sicCode
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property sicDescription (base name: "sic_description")', function() {
      // uncomment below and update the code to test the property sicDescription
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property sicVersion (base name: "sic_version")', function() {
      // uncomment below and update the code to test the property sicVersion
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property yearStarted (base name: "year_started")', function() {
      // uncomment below and update the code to test the property yearStarted
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property netWorth (base name: "net_worth")', function() {
      // uncomment below and update the code to test the property netWorth
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property currencyCode (base name: "currency_code")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property currencyName (base name: "currency_name")', function() {
      // uncomment below and update the code to test the property currencyName
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property totalEmployees (base name: "total_employees")', function() {
      // uncomment below and update the code to test the property totalEmployees
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property totalEmployeesIndicator (base name: "total_employees_indicator")', function() {
      // uncomment below and update the code to test the property totalEmployeesIndicator
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property totalEmployeesIndicatorDescription (base name: "total_employees_indicator_description")', function() {
      // uncomment below and update the code to test the property totalEmployeesIndicatorDescription
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property legalFormCode (base name: "legal_form_code")', function() {
      // uncomment below and update the code to test the property legalFormCode
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property legalFormDescription (base name: "legal_form_description")', function() {
      // uncomment below and update the code to test the property legalFormDescription
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property reportDate (base name: "report_date")', function() {
      // uncomment below and update the code to test the property reportDate
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property isOutOfBusiness (base name: "is_out_of_business")', function() {
      // uncomment below and update the code to test the property isOutOfBusiness
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property isBranch (base name: "is_branch")', function() {
      // uncomment below and update the code to test the property isBranch
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property businessRegistrationNumber (base name: "business_registration_number")', function() {
      // uncomment below and update the code to test the property businessRegistrationNumber
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property businessRegistrationType (base name: "business_registration_type")', function() {
      // uncomment below and update the code to test the property businessRegistrationType
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property incorporationYear (base name: "incorporation_year")', function() {
      // uncomment below and update the code to test the property incorporationYear
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property tradeStyles (base name: "trade_styles")', function() {
      // uncomment below and update the code to test the property tradeStyles
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property enquiryDuns (base name: "enquiry_duns")', function() {
      // uncomment below and update the code to test the property enquiryDuns
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property sales (base name: "sales")', function() {
      // uncomment below and update the code to test the property sales
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property salesEstimatedDescription (base name: "sales_estimated_description")', function() {
      // uncomment below and update the code to test the property salesEstimatedDescription
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property paydexScore (base name: "paydex_score")', function() {
      // uncomment below and update the code to test the property paydexScore
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property paydexScoreDescription (base name: "paydex_score_description")', function() {
      // uncomment below and update the code to test the property paydexScoreDescription
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property paydexNorm (base name: "paydex_norm")', function() {
      // uncomment below and update the code to test the property paydexNorm
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property intangibleAssets (base name: "intangible_assets")', function() {
      // uncomment below and update the code to test the property intangibleAssets
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property maxCreditRecommendation (base name: "max_credit_recommendation")', function() {
      // uncomment below and update the code to test the property maxCreditRecommendation
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property dubRating (base name: "dub_rating")', function() {
      // uncomment below and update the code to test the property dubRating
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property dubRatingFinancialStrength (base name: "dub_rating_financial_strength")', function() {
      // uncomment below and update the code to test the property dubRatingFinancialStrength
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property dubRatingRisk (base name: "dub_rating_risk")', function() {
      // uncomment below and update the code to test the property dubRatingRisk
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property dubRatingRiskDescription (base name: "dub_rating_risk_description")', function() {
      // uncomment below and update the code to test the property dubRatingRiskDescription
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property hasOpenClaims (base name: "has_open_claims")', function() {
      // uncomment below and update the code to test the property hasOpenClaims
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property hasCriminalProceedings (base name: "has_criminal_proceedings")', function() {
      // uncomment below and update the code to test the property hasCriminalProceedings
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property hasDisasterEvent (base name: "has_disaster_event")', function() {
      // uncomment below and update the code to test the property hasDisasterEvent
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property hasFinancialEmbarrassment (base name: "has_financial_embarrassment")', function() {
      // uncomment below and update the code to test the property hasFinancialEmbarrassment
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property hasFinancialLegalEvent (base name: "has_financial_legal_event")', function() {
      // uncomment below and update the code to test the property hasFinancialLegalEvent
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property hasSpecialEvent (base name: "has_special_event")', function() {
      // uncomment below and update the code to test the property hasSpecialEvent
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property hasOtherEvent (base name: "has_other_event")', function() {
      // uncomment below and update the code to test the property hasOtherEvent
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property hasSecuredFilings (base name: "has_secured_filings")', function() {
      // uncomment below and update the code to test the property hasSecuredFilings
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property hasLawsuit (base name: "has_lawsuit")', function() {
      // uncomment below and update the code to test the property hasLawsuit
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property areEmployeesEstimated (base name: "are_employees_estimated")', function() {
      // uncomment below and update the code to test the property areEmployeesEstimated
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

    it('should have the property areSalesEstimated (base name: "are_sales_estimated")', function() {
      // uncomment below and update the code to test the property areSalesEstimated
      //var instane = new DatamillForApplications.BusinessDataDunsRatingResponse();
      //expect(instance).to.be();
    });

  });

}));
