/**
 * /data.mill for applications
 * **&#47;data.mill for applications** is the most versatile and powerful API for all aspects of data quality in your business application.  Use **&#47;data.mill** to check, correct and enrich personal data and business information. The internationally applicable functions can be integrated easily into existing applications, whether desktop, online or mobile and thus enable you to professionally improve your customer or supplier database, directly in your system. Due to **&#47;data.mill**'s pay-per-use credit model there are no setup fees or fixed monthly subscription fees.  **&#47;data.mill** is constantly evolving and upgraded with the latest technology and data services available on the market.  GitHub for SDKs: https://github.com/datamill-solutions 
 *
 * OpenAPI spec version: 1.6.5
 * Contact: info@datamill.solutions
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['Datamill/ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.datamill-js-client) {
      root.datamill-js-client = {};
    }
    root.datamill-js-client.BusinessDataUndeliverableContactsSearchContact = factory(root.datamill-js-client.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The BusinessDataUndeliverableContactsSearchContact model module.
   * @module Datamill/Datamill/BusinessDataUndeliverableContactsSearchContact
   * @version 1.6.5
   */

  /**
   * Constructs a new <code>BusinessDataUndeliverableContactsSearchContact</code>.
   * Contact object within response of successful transformation request for /business-data/undeliverable-contacts/search Collection of multiple information about the person found (e.g. the new postal address if known) gender: The person&#39;s gender (M or F) title: The person&#39;s title title_of_nobility: The person&#39;s title of nobility country_code: The ISO 3166-1 alpha-2 code of the country the person lives in zip: The postal code of the city/region the person lives in city: The city the person lives in street: The street the person lives in street_addition: Additional information about the street house_number: The house number of the building the person lives in house_number_addition: Additional information about the house number date_of_birth: The person&#39;s date of birth (yyyy-mm-dd) if available and deceased timestamp: The timestamp (yyyy-mm-dd) when the database entry was created 
   * @alias module:Datamill/Datamill/BusinessDataUndeliverableContactsSearchContact
   * @class
   */
  var exports = function() {
    var _this = this;













  };

  /**
   * Constructs a <code>BusinessDataUndeliverableContactsSearchContact</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Datamill/Datamill/BusinessDataUndeliverableContactsSearchContact} obj Optional instance to populate.
   * @return {module:Datamill/Datamill/BusinessDataUndeliverableContactsSearchContact} The populated <code>BusinessDataUndeliverableContactsSearchContact</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('gender')) {
        obj['gender'] = ApiClient.convertToType(data['gender'], 'String');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('title_of_nobility')) {
        obj['title_of_nobility'] = ApiClient.convertToType(data['title_of_nobility'], 'String');
      }
      if (data.hasOwnProperty('street')) {
        obj['street'] = ApiClient.convertToType(data['street'], 'String');
      }
      if (data.hasOwnProperty('street_addition')) {
        obj['street_addition'] = ApiClient.convertToType(data['street_addition'], 'String');
      }
      if (data.hasOwnProperty('house_number')) {
        obj['house_number'] = ApiClient.convertToType(data['house_number'], 'String');
      }
      if (data.hasOwnProperty('house_number_addition')) {
        obj['house_number_addition'] = ApiClient.convertToType(data['house_number_addition'], 'String');
      }
      if (data.hasOwnProperty('zip')) {
        obj['zip'] = ApiClient.convertToType(data['zip'], 'String');
      }
      if (data.hasOwnProperty('city')) {
        obj['city'] = ApiClient.convertToType(data['city'], 'String');
      }
      if (data.hasOwnProperty('country_code')) {
        obj['country_code'] = ApiClient.convertToType(data['country_code'], 'String');
      }
      if (data.hasOwnProperty('date_of_birth')) {
        obj['date_of_birth'] = ApiClient.convertToType(data['date_of_birth'], 'Date');
      }
      if (data.hasOwnProperty('timestamp')) {
        obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
      }
    }
    return obj;
  }

  /**
   * The person's gender (**M** or **F**)
   * @member {module:Datamill/Datamill/BusinessDataUndeliverableContactsSearchContact.GenderEnum} gender
   */
  exports.prototype['gender'] = undefined;
  /**
   * The person's title
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * The person's title of nobility
   * @member {String} title_of_nobility
   */
  exports.prototype['title_of_nobility'] = undefined;
  /**
   * The street the person lives in
   * @member {String} street
   */
  exports.prototype['street'] = undefined;
  /**
   * Additional street information
   * @member {String} street_addition
   */
  exports.prototype['street_addition'] = undefined;
  /**
   * The house number of the building the person lives in
   * @member {String} house_number
   */
  exports.prototype['house_number'] = undefined;
  /**
   * Additional information about the house number
   * @member {String} house_number_addition
   */
  exports.prototype['house_number_addition'] = undefined;
  /**
   * The postal code of the city/region the person lives in
   * @member {String} zip
   */
  exports.prototype['zip'] = undefined;
  /**
   * The city the person lives in
   * @member {String} city
   */
  exports.prototype['city'] = undefined;
  /**
   * The ISO 3166-1 alpha-2 code of the country the person lives in
   * @member {String} country_code
   */
  exports.prototype['country_code'] = undefined;
  /**
   * The person's date of birth (yyyy-mm-dd) if available and deceased
   * @member {Date} date_of_birth
   */
  exports.prototype['date_of_birth'] = undefined;
  /**
   * The timestamp (yyyy-mm-dd) when the database entry was created
   * @member {Date} timestamp
   */
  exports.prototype['timestamp'] = undefined;


  /**
   * Allowed values for the <code>gender</code> property.
   * @enum {String}
   * @readonly
   */
  exports.GenderEnum = {
    /**
     * value: "M"
     * @const
     */
    "M": "M",
    /**
     * value: "F"
     * @const
     */
    "F": "F"  };


  return exports;
}));


